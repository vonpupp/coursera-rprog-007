outcome <- read.csv("outcome-of-care-measures.csv", colClasses="character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
head(outcome)
outcome[, 11]
str(outcome)
outcome$Hospital.Name
descr(outcome)
describe(outcome)
describe(outcome)
summary(outcome)
mean(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
mean(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, na.rm=T)
f <- factor(outcome$State)
outcome_by_state <- split(outcome, f)
outcome_by_state
outcome_by_state$WY
mean(outcome_by_state$WY$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, na.rm=T)
unique(data$State)
unique(unlist(data$State)
)
unique(unlist(data$State))
unique(unlist(data$State, use.names = F))
data$State
data <- outcome
unique(data$State)
t <- regmatches("heart attack", "HeArt ATTack")
t <- "heart attack" == "HeArt ATTack"
t
t <- "heart attack" == tolower("HeArt ATTack")
t
states
state <- FL
state <- 'FL'
states <- unique(data$State)
t <- state in states
t <- state %in% states
t
state <- 'fl'
t <- state %in% states
t
outcome <- "heart attack"
is_heart_attack <- "heart attack" == tolower(outcome)
data_by_state
states <- unique(data$State)
by_state <- factor(data$State)
data_by_state <- split(data, by_state)
data_b_state
by_state <- factor(data$State)
data_by_state <- split(data, by_state)
data_by_state
mean(data_by_state[1])
mean(data_by_state$state)
state
state <- 'FL'
mean(data_by_state$state)
mean(data_by_state$state, na.rm=T)
mean(data_by_state$AK, na.rm=T)
min(data_by_state$AK, na.rm=T)
data_by_state$state <- as.numeric(data_by_state$state)
data_by_state$state
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data$State)
by_state <- factor(data$State)
data_by_state <- split(data, by_state)
data_by_state$state
state
data_by_state
data_by_state$AK
data_by_state$state
data_by_state$[state]
data_by_state$state[, 1]
data_by_state$state[, 1]
state
sumary(data_by_state[, state]
)
summary(data_by_state[, state])
data_by_state[, state]
data_by_state.df[, state]
data_by_state[[state]]
min(data_by_state[[state]])
summarize(data_by_state[[state]])
summary(data_by_state[[state]])
min(data_by_state[[state]])
min(data_by_state[[state]], na.rm=T)
summary(data_by_state[[state]])
summary(data_by_state[[state]]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
data_by_state[[state]]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- data_by_state[[state]]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
summary(data_by_state[[state]]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
data_by_state[[state]]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(data_by_state[[state]]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
summary(data_by_state[[state]]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
x <- data_by_state[[state]]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
x <- as.numeric(x)
x
x <- data_by_state[[state]]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
x <- as.numeric(x)
min <- min(x, na.rm = T)
min
outcome_column <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
data_by_state[[state]]$[[outcome_column]] <- as.numeric(data_by_state[[state]]$[[outcome_column]])
data_by_state[[state]][[outcome_column]]
data_by_state[[state]][[outcome_column]] <- as.numeric(data_by_state[[state]][[outcome_column]])
data_by_state[which.min(min)]
row <- data_by_state[which.min(min)]
row$AK
row$AK$Hospital.Name
row <- data_by_state[which.min(min)]
data_by_state[row, ]
row <- which.min(min)
row
data_by_state[row, ]
data_by_state[row]
state <- 'AL'
data_by_state$state <- as.numeric(data_by_state$state)
outcome_column <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
data_by_state[[state]][[outcome_column]] <- as.numeric(data_by_state[[state]][[outcome_column]])
min <- min(x, na.rm = T)
row <- which.min(min)
row
min
outcome_column <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
data_by_state[[state]][[outcome_column]] <- as.numeric(data_by_state[[state]][[outcome_column]])
min <- min(data_by_state[[state]][[outcome_column]], na.rm = T)
row <- which.min(min)
min
row
x <- data_by_state[[state]]
x
summary(x)
r <- x[x$name]
r
r <- x[data_by_state[[state]][[outcome_column]]==min]
min
r <- data_by_state[[state]][[outcome_column]][which.min(min)]
r
r <- data_by_state[[state]][[outcome_column]][which.min(min), ]
outcome
outcome_correct <- tolower(outcome) %in% ["heart attack", "heart failure", "pneumonia"]
outcome_correct <- tolower(outcome) %in% c("heart attack", "heart failure", "pneumonia")
outcome <- 'HEART attack'
outcome_correct <- tolower(outcome) %in% c("heart attack", "heart failure", "pneumonia")
outcome <- 'HEART attacka'
outcome_correct <- tolower(outcome) %in% c("heart attack", "heart failure", "pneumonia")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data$State)
state_correct <- toupper(state) %in% states
if !state_correct
stop("invalid state")
outcome_correct <- tolower(outcome) %in% c("heart attack", "heart failure", "pneumonia")
if !outcome_correct
stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data$State)
state_correct <- toupper(state) %in% states
if (!state_correct){
stop("invalid state")
}
outcome_correct <- tolower(outcome) %in% c("heart attack", "heart failure", "pneumonia")
if (!outcome_correct){
stop("invalid outcome")
}
outcome <- "heart attack"
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data$State)
state_correct <- toupper(state) %in% states
if (!state_correct){
stop("invalid state")
}
outcome_correct <- tolower(outcome) %in% c("heart attack", "heart failure", "pneumonia")
if (!outcome_correct){
stop("invalid outcome")
}
is_heart_attack <- "heart attack" == tolower(outcome)
if (is_hear_attack) {
outcome_column <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
is_heart_attack <- "heart attack" == tolower(outcome)
if (is_heart_attack) {
outcome_column <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
data_by_state[[state]][[outcome_column]] <- as.numeric(data_by_state[[state]][[outcome_column]])
min <- min(data_by_state[[state]][[outcome_column]], na.rm = T)
x <- data_by_state[[state]]
x <- data_by_state[[state]][data_by_state[[state]][[outcome_column]] == min,]
x
x <- data_by_state[[state]][data_by_state[[state]][[outcome_column]] == min, na.rm =T]
x <- data_by_state[[state]][1,]
x
sorted_data <- data_by_state[order(data_by_state[[outcome_column]]),]
sorted_data <- data_by_state[order(data_by_state[[outcome_column]])]
sorted_data <- data_by_state[order(data_by_state[[outcome_column]])]
data_by_state
summary(data_by_state)
data_by_state[[state]]
sorted_data <- data_by_state[[state]][order(data_by_state[[state]][[outcome_column]]),]
sorted_data
sorted_data[1,]
sorted_data <- data_by_state[[state]][order(data_by_state[[state]][[outcome_column]], data_by_state[[state]][["Hospital.Name"]]),]
sorted_data[1,]
sorted_data[1,][["Hospital.Name"]]
soruce("best.R")
source("best.R")
best("TX", "heart attack")
t<-best("TX", "heart attack")
t
t<-best("TX", "heart failure")
t
source("best.R")
source("best.R")
t<-best("TX", "heart attack")
t
t<-best("TX", "heart failure")
t
source("best.R")
t<-best("TX", "heart failure")
t
t<-best("TX", "pneumonia")
t
t<-best("MD", "pneumonia")
t
t<-best("MD", "heart attack")
t
t<-best("BB", "heart attack")
t<-best("NY", "hert attack")
source("submitscript3.R")
submit()
submit()
submit()
source(rankhospital.R)
source(rankhospital.R)
source('~/workspace/ProgrammingAssignment3/rankhospital.R')
rankhospital('TX', "heart failure", 4)
t<-rankhospital('TX', "heart failure", 4)
t
t<-rankhospital('TX', "heart failure", 1)
t
source('~/workspace/ProgrammingAssignment3/rankhospital.R')
t<-rankhospital('TX', "heart failure", 1)
t
t<-rankhospital('TX', "heart failure", 2)
t
t<-rankhospital('TX', "heart failure", 4)
t
t<-rankhospital('MD', "heart attack", "worst")
t
t<-rankhospital('MD', "heart attack", 5000)
t
source('~/workspace/ProgrammingAssignment3/submitscript3.R')
submit()
submit()
submit()
submit()
source('~/workspace/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
t<-head(rankall("heart attack", 20), 10)
t
t<-head(rankall("heart failure"), 10)
t
source('~/workspace/ProgrammingAssignment3/rankall.R')
t<-head(rankall("heart failure"), 10)
t
t<-tail(rankall("heart failure"), 10)
t
t<-tail(rankall("pneumonia", "worst"), 10)
t
t<-tail(rankall("pneumonia", "worst"), 3)
t
t<-head(rankall("heart attack", 20), 10)
t
source('~/workspace/ProgrammingAssignment3/submitscript3.R')
submit()
t
source('~/workspace/ProgrammingAssignment3/rankall.R')
submit()
submit()
submit()
library(swirl)
swirl()
set.seed(1)
rpois(5, 2)
quit()
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?qnorm
?qpois
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
?rexp
?rbinom
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(x[2], x[4], x[6])
c(3, 5, 7)
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
vect2
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
atributes(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(1:20, 4, 5)
matrix(1:20, 4, 5, byrow=T)
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnams <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
t <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_color, 6)
head(flag_color)
head(flag_colors, 6)
head(flag_colors)
sapply(flag_colors, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
sapply(flag_shapes, range)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 6, 6))
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(shape_mat, unique)
unique_vals <- lapply(flags, unique)
unique_vals
l <- lapply(unique_vals, length)
sapply(unique_vals, length)
exit()
quit()
library(swirl)
swirl()
lapply
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
